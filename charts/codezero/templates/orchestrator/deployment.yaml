apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrator.name" . }}
  labels:
    {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.orchestrator.replicaCount }}
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "orchestrator.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "orchestrator.podLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "orchestrator.name" . }}
      securityContext:
        {{- toYaml .Values.orchestrator.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-cert
          securityContext:
            {{- toYaml .Values.orchestrator.securityContext | nindent 12 }}
          image: public.ecr.aws/docker/library/busybox:1.36
          command: ["sh", "-c", "for i in `seq 1 20`; do sleep 0.5; if [ -e /etc/ssl/certs/space/ca.pem ]; then exit 0; fi; done; exit 1"]
          volumeMounts:
            - mountPath: /etc/ssl/certs/space
              name: space-cert
              readOnly: true
      containers:
        - name: {{ include "orchestrator.name" . }}
          securityContext:
            {{- toYaml .Values.orchestrator.securityContext | nindent 12 }}
          image: "c6oio/orchestrator:{{ .Values.orchestrator.image.tag | default .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy }}
          env:
            - name: CZ_SPACE_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "codezero.name" . }}
                  key: spaceID
                  optional: true
            - name: CZ_SPACE_CA_CERT
              value: /etc/ssl/certs/space/ca.pem
            - name: CZ_CLUSTER_CERT
              value: /etc/ssl/certs/space/tls.pem
            - name: CZ_CLUSTER_CERT_KEY
              value: /etc/ssl/certs/space/tls.key
            {{- if .Values.opa.enabled }}
            - name: CZ_OPA_URL
              value: {{ .Values.opa.url }}
            {{- end }}
            {{- if .Values.hub.url }}
            - name: CZ_HUB_URL
              value: {{ printf "%s/" .Values.hub.url }}
            {{- end }}
            {{- if .Values.operator.enabled }}
            - name: CZ_OPERATOR_ENABLED
              value: "true"
            {{- end}}
            - name: CZ_PORT
              value: '8900'
            - name: NODE_ENV
              value: 'production'
            - name: DEBUG
              value: '*,-engine*,-nodemon*,-*expo*,-babel*,-winston*,-follow-redirects*'
          ports:
            - containerPort: 8900
              protocol: TCP
          resources:
            {{- toYaml .Values.orchestrator.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/ssl/certs/space
              name: space-cert
              readOnly: true
      volumes:
        - name: space-cert
          secret:
            secretName: space-cert
      {{- with .Values.orchestrator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.orchestrator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.orchestrator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
